name: CI

on: [push, pull_request]

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - x86_64-pc-windows-msvc
          - x86_64-pc-windows-gnu
          - i686-pc-windows-msvc
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
        version:
          - stable
          - nightly
        include:
        - toolchain: x86_64-pc-windows-msvc
          os: windows-latest
        - toolchain: x86_64-pc-windows-gnu
          os: windows-latest
        - toolchain: i686-pc-windows-msvc
          os: windows-latest
        - toolchain: x86_64-unknown-linux-gnu
          os: ubuntu-latest
        - toolchain: x86_64-apple-darwin
          os: macOS-latest

    name: ${{ matrix.version }} - ${{ matrix.toolchain }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@master

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-${{ matrix.toolchain }}
          default: true

      - name: check nightly (nix)
        if: ${{ matrix.version == 'nightly' && (matrix.os == 'ubuntu-latest' || matrix.os == 'macOS-latest') }}
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-targets --all-features --benches --bins --examples --tests

      - name: check nightly (windows)
        if: ${{ matrix.version == 'nightly' && matrix.os == 'windows-latest' }}
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --benches --bins --examples --tests

      - name: check stable
        if: matrix.version == 'stable'
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --bins --examples --tests

      - name: tests windows
        env:
          RUST_BACKTRACE: full
        if: matrix.os == 'windows-latest'
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: tests nightly osx
        env:
          RUST_BACKTRACE: full
        if: ${{ matrix.version == 'nightly' && matrix.os == 'macOS-latest' }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-features

      - name: tests nightly linux
        env:
          RUST_BACKTRACE: full
        if: ${{ matrix.version == 'nightly' && matrix.os == 'ubuntu-latest' }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-targets --all-features

  check_fmt_and_docs:
    name: Checking fmt and docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Setup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
          components: rustfmt

      - name: fmt
        run: cargo fmt --all -- --check

      - name: doc
        run: cargo doc
